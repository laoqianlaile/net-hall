<?xml version="1.0" encoding="UTF-8"?>
<page template="0401" version="2.0" formaction="">
  <info>
    <description title="职工补缴登记"/>
    <editlogs>
      <log editor="Y01532(离线)" edittime="2019-03-08 11:44:43"/>
    </editlogs>
  </info>
  <scripts>
    <script><![CDATA[

thisTab.pageOnload = function () {
	//刷新列表
    $("#list_datalist1_buttons_refresh").click();

	//1.补缴类型
	$('#spaytype').change(function(event) {
		//补缴类型，按月补缴时增加检查标志
		if( $$('spaytype').value == '2' ){
			$$('speflag').value = '0';
		}else{
			$$('speflag').value = '';
		}
        ydl.init.dataList({id: 'datalist1'}, 'refresh', thisTab);
	});
	$('label[for="payinaccbank"]').hide();
	$('#payinaccbank').parent().hide();
	$('label[for="styhdm"]').hide();
	$('#styhdm').parent().hide();
	$('label[for="cstbankaccname"]').hide();
	$('#cstbankaccname').parent().hide();
	$('label[for="basebankaccnum"]').hide();
    $('#basebankaccnum').parent().hide();
	//2.根据不同的缴款方式,初始化页面
	paymode_Init();

	//3.补缴金额change事件
	$("#spayamt").change( function(event){
		ydl.validator('spayamt',{
			rule: parseFloat($("#spayamt").val()) != '0.00',
			message: '补缴金额不能为0！'});
		ydl.selectByValue('paymode', '');
		$("#uprepayamt").attr({readonly:false, disabled:false});
		$("#factpayamt").attr({readonly:false, disabled:false});
		$("uprepayamt").val() = 0.00;
		$("factpayamt").val() = 0.00;
	});

	//4.缴款方式变更onChange事件
	$("#paymode").change( function(event) {
		if($("#paymode").val() == '8' && $("#finalflag").val() != '1'){
			ydl.alert("账户不为下级单位，不能选择该缴款方式！");
			ydl.selectByValue('paymode', '' );
			return false;
		}
		if( $("#spayamt").val() != "" && $("#upreusebal").val() != "" ){
			if( !check_preusebal())
				return false;
		}
		paymode_Init();
	});

	//5.实际缴款金额 onChange事件
	$('#factpayamt').change( function(event) {
		var factpayamt = parseFloat(ydl.delComma($$('factpayamt').value));
		var spayamt	   = parseFloat(ydl.delComma($$('spayamt').value));
		var upreusebal = parseFloat(ydl.delComma($$('upreusebal').value));
		//(1)检查录入金额不能大于应缴金额 change for 区分缴存方式
		if( !ydl.validator('factpayamt',{
					rule: factpayamt == spayamt,
					message:'实际缴款金额必须等于应缴金额'}) ) {
			$$('factpayamt').value = 0.00;
			return false;
		}
		//(2)检查暂收款余额不足
		if( !check_preusebal())	{
			return false;
		}
		$$('uprepayamt').value = (spayamt - factpayamt).toFixed(2);
	});

	//6.预缴户转出金额 onChange事件
	$('#uprepayamt').change(function(event) {
		var factpayamt = parseFloat(ydl.delComma($$('factpayamt').value));
		var spayamt	   = parseFloat(ydl.delComma($$('spayamt').value));
		var upreusebal = parseFloat(ydl.delComma($$('upreusebal').value));
		var uprepayamt = parseFloat(ydl.delComma($$('uprepayamt').value));
		//(1)检查录入金额不能大于应缴金额
		if( !ydl.validator('uprepayamt',{
				rule: uprepayamt < spayamt,
				message:'暂收户转出金额必须小于应缴金额'}) ) {
			$$('uprepayamt').value = 0.00;
			return false;
		}
		if( !check_preusebal())
			return false;
		$$('factpayamt').value = (spayamt-uprepayamt).toFixed(2);
	});

    //7.查询按钮
	$('#query').click(function(event) {
		dpGetUnitRegMsg();
	});

    //8.补缴金额和补缴人数的动态刷新
    ajax_after_getPeoplenum();
}

// 添加批量数据前判断是否录入正确的单位账号
thisTab.datalist_buttonclick_datalist1=function(buttonType) {
	var r = true;
	if( buttonType == 'add'){
		if(!ydl.validator('dwzh',{
				rule: $$('dwmc').value != '',
				message:'请输入正确的单位账号!'
				}))
			r &= false;
	}

	if( buttonType == 'save'  ){
		$('#datalist1 tr:gt(0)').each(function(event){
			//检查日期格式是否为 yyyy-mm
			if(!ydl.validator($(this).getCell('begym', 'input'),{
				rule: isDate($(this).getCell('begym', 'input').val()) == true,
				message:'日期格式不正确，正确格式为：yyyy-mm!'
			}))
			r &= false;

			//检查日期格式是否为 yyyy-mm
			if(!ydl.validator($(this).getCell('endym', 'input'),{
				rule: isDate($(this).getCell('endym', 'input').val()) == true,
				message:'日期格式不正确，正确格式为：yyyy-mm!'
			}))
			r &= false;

			if($(this).getCell('begym', 'input').val() != "" && $(this).getCell('endym', 'input').val() != "") {
				if(!ydl.validator($(this).getCell('begym', 'input'),{
					rule: $(this).getCell('begym', 'input').val() <= $(this).getCell('endym', 'input').val(),
					message:'开始年月不能大于截至年月！'
				}))
				r &= false;
			}
		});
	}
	return !!r;
}

// 补缴金额和补人数的动态获取
function ajax_after_getPeoplenum() {
    ydl.init.ajax("getPeoplenum",{},function(data){
        $('#spayamt').val(data[0].spayamt);
        $('#spayamt').blur();
        $('#spaynum').val(data[0].spaynum);
        $('#spaynum').blur();
        //如果是暂存款或者上级预缴转入，赋值给预缴户转出金额
        if( $$('paymode').value == '3' || $$('paymode').value == '8'){
            $$('uprepayamt').value = $$('spayamt').value;
            $('#uprepayamt').blur();
        }
        //如果是转账或者实时结算，赋值给实际缴款金额
        if($$('paymode').value == '1' || $$('paymode').value == '7'){
            $$('factpayamt').value = $$('spayamt').value;
            $('#factpayamt').blur();
        }
    });
}

// 查询信息
function dpGetUnitRegMsg(){
    var dwzh = $("#dwzh").val();
    var dwjcbl = $("#dwjcbl").val()*100;
    var grjcbl = $("#grjcbl").val()*100;
    ydl.sendCommand('QFCX',{"dwzh":dwzh,"type":"5","dwjcbl":dwjcbl,"grjcbl":grjcbl},function(data,code,msg){
       if (code != '00000000') {
           ydl.alert({'code':code, 'message':msg});
       }else{
            ydl.init.dataList({id: 'datalist1'}, 'refresh', thisTab);
        }
    });
}

//列表datalist1初始化、翻页、保存、新增等动作完成后执行
thisTab.datalist_callback_datalist1=function(rows) {
	$(rows).each(function () {
		initRow(this);
	});
	ajax_after_getPeoplenum();
};

//列表新增的时候执行
thisTab.datalist_add_datalist1 = function (row) {
    initRow(row);
};

function initRow(row) {
    $(row).getCell('xingming', 'input');
    $(row).getCell('zjhm', 'input');
    //获取个人姓名文本框，并设置只读
    var $xingming = ydl.attr($(row).getCell('xingming', 'input'), 'readonly');
    var $zjhm = ydl.attr($(row).getCell('zjhm', 'input'), 'readonly');
    var $grzh = $(row).getCell('grzh', 'input');
    var $amt2 = $(row).getCell('amt2', 'input');					//单位补缴
    var $payvouamt = $(row).getCell('payvouamt', 'input');			//单位补缴
    var $amt1 = $(row).getCell('amt1', 'input');//总金额
    var $begym = $(row).getCell('begym', 'input');
    var $endym = $(row).getCell('endym', 'input');
    var $gryjce = $(row).getCell('gryjce', 'input');
    var $dwyjce = $(row).getCell('dwyjce', 'input');
    //定额不允许编辑
    if($("#spaytype").val()==""||$("#spaytype").val()==null){
        ydl.alert("请先选择补缴类型！");
        return false;
    }
    /*else if($("#spaytype").val()=="2"){
        ydl.attr($amt2,'readonly',true);
        ydl.attr($payvouamt ,'readonly',true);
    }else{
        ydl.attr($amt2,'readonly',false);
        ydl.attr($payvouamt ,'readonly',false);
    }*/
	ydl.attr($amt1,'readonly',true);
	/*if($("#spaytype").val()=='4'){//补缴类型
		ydl.removeAttr($amt2,'readonly',true);
		ydl.removeAttr($payvouamt ,'readonly',true);
	}*/
    //异步ajax提交获取单位账号下的相关信息
    $(row).getCell('grzh', 'input').change(function() {
         var grzh = $(row).getCell('grzh', 'input').val();
         ydl.sendCommand('cmdGRXXCX',{"grzh":grzh},function(data,code,msg){
            if (code != '00000000') {
                ydl.alert({'code':code, 'message':msg});
            }else{
                if(data){
                    console.log("data",data);
                    var dwzh = data.dwzh;
                    if ( dwzh != $$('dwzh').value ){
                        ydl.alert("个人账户非本单位账户！");
                        $(row).getCell('xingming', 'input').val('');
                        $(row).getCell('grzh', 'input').val('');
                        $(row).getCell('gryjce', 'input').val('');
                        $(row).getCell('dwyjce', 'input').val('');
                        return false;
                    }
                    $(row).getCell('xingming', 'input').val(data.xingming);
                    $(row).getCell('zjhm', 'input').val(data.zjhm);
                    $(row).getCell('gryjce', 'input').val(data.gryjce);
                    $(row).getCell('dwyjce', 'input').val(data.dwyjce);
                }
            }
         });
    });
    if( $amt2.val == '' ){
        $amt2.val(0.00);
    }
    if( $payvouamt.val == '' ){
        $payvouamt.val(0.00);
    }
    //单位或个人部分金额变化时
    $(row).getCell('amt2', 'input').change(function() {
        if( $amt2.val() == '' ){
            $amt2.val(0.00);
        }
        if( $payvouamt.val() == '' ){
            $payvouamt.val(0.00);
        }
        if( $payvouamt.val() != '' ){
            var amt2 = parseFloat(ydl.delComma($amt2.val()));
            var payvouamt = parseFloat(ydl.delComma($payvouamt.val()));
            $amt1.val( parseFloat(parseFloat(amt2) + parseFloat(payvouamt)).toFixed(2));
        }

    });
    //个人
    $(row).getCell('payvouamt', 'input').change(function() {
        if( $amt2.val() == '' ){
            $amt2.val(0.00);
        }
        if( $payvouamt.val() == '' ){
            $payvouamt.val(0.00);
        }
        if( $amt2.val() != '' ){
            var amt2 = parseFloat(ydl.delComma($amt2.val()));
            var payvouamt = parseFloat(ydl.delComma($payvouamt.val()));
            $amt1.val( parseFloat(parseFloat(amt2) + parseFloat(payvouamt)).toFixed(2));
        }
    });

    $(row).getCell('begym', 'input').change(function() {
        //检查日期格式是否为 yyyy-mm
        if(!ydl.validator($begym,{
            rule: isDate($begym.val()) == true,
            message:'日期格式不正确，正确格式为：yyyy-mm!'
        }))
        return false;

        if($endym.val() != '') {
            //检查日期格式是否为 yyyy-mm
            if(!ydl.validator($endym,{
                rule: isDate($endym.val()) == true,
                message:'日期格式不正确，正确格式为：yyyy-mm!'
            }))
            return false;

            //检查开始年月是否大于截至年月
            if(!ydl.validator($begym,{
                rule: $begym.val() <= $endym.val(),
                message:'开始年月不能大于截至年月！'
            }))
            return false;
        }
        //var amtArray = getSuppAmt($begym.val(),$endym.val(),$gryjce.val(),$dwyjce.val());
        //$payvouamt.val(amtArray[0]);
        //$amt2.val(amtArray[1]);
        //var amt2 = parseFloat(ydl.delComma($amt2.val()));
        //var payvouamt = parseFloat(ydl.delComma($payvouamt.val()));
        //$amt1.val( parseFloat(parseFloat(amt2) + parseFloat(payvouamt)).toFixed(2));
    });

    $(row).getCell('endym', 'input').change(function() {
        //检查日期格式是否为 yyyy-mm
        if(!ydl.validator($endym,{
            rule: isDate($endym.val()) == true,
            message:'日期格式不正确，正确格式为：yyyy-mm!'
        }))
        return false;

        if($begym.val() != '') {
            //检查日期格式是否为 yyyy-mm
            if(!ydl.validator($begym,{
                rule: isDate($begym.val()) == true,
                message:'日期格式不正确，正确格式为：yyyy-mm!'
            }))
            return false;

            //检查开始年月是否大于截至年月
            if(!ydl.validator($endym,{
                rule: $endym.val() >= $begym.val(),
                message:'截至年月不能小于开始年月！'
            }))
            return false;
        }
        if($("#spaytype").val()=="2"){
            var amtArray = getSuppAmt($begym.val(),$endym.val(),$gryjce.val(),$dwyjce.val());
            //$payvouamt.val(amtArray[0]);
            //$amt2.val(amtArray[1]);
            //var amt2 = parseFloat(ydl.delComma($amt2.val()));
            //var payvouamt = parseFloat(ydl.delComma($payvouamt.val()));
            //$amt1.val( parseFloat(parseFloat(amt2) + parseFloat(payvouamt)).toFixed(2));
        }
    });
}

//表单提交时执行
thisTab.form_validate = function () {
    debugger;
	//1.必要检查
	if($$('dwzhzt').value != '01'){
		ydl.alert("账户状态非正常，不能办理此业务！");
		return false;
	}
	//2.当缴款方式非预缴划入银行必选
	if( $$('paymode').value != '3' && $$('paymode').value != '8' ){
		if( !ydl.validator('payinaccbank', {required: true})){
			return false;
		}
		if($$('paymode').value == '7'){
            if( !ydl.validator('styhdm', {required: true,message:'受托银行代码不能为空，请去单位基本资料变更中修改'}))	return false;
            if( !ydl.validator('basebankaccnum', {required: true,message:'受托银行账号不能为空，请去单位基本资料变更中修改'}))	return false;
            if( !ydl.validator('cstbankaccname', {required: true,message:'受托银行账户名称不能为空，请去单位基本资料变更中修改'}))	return false;
        };
	}
    //3.转账和实时结算实际缴存金额=补缴金额
     if( parseFloat($$('factpayamt').value).toFixed(2)-
         parseFloat($$('spayamt').value).toFixed(2) >0.005){
         ydl.alert("实际缴款金额不等于补缴金额！")
         return false;
     }else{
         if( !check_preusebal()){
             return false;
         }
         if( parseFloat($$('uprepayamt').value).toFixed(2)-
             parseFloat($$('spayamt').value).toFixed(2) >0.005){
             ydl.alert("暂收户转出金额不等于补缴金额！")
             return false;
         }
    }
	var dSPayAmt = parseFloat(ydl.delComma($$('spayamt').value));
	var dFactPayAmt = parseFloat(ydl.delComma($$('factpayamt').value));
	var dUPrePayAmt = parseFloat(ydl.delComma($$('uprepayamt').value));
	var dPaySum = dFactPayAmt + dUPrePayAmt;

	//校验电子档案,第一个参数为是否弹出框方式提示信息,第二个参数为是否调用提交接口
 	//erecord.valSubmitRequired(true,options_NZR)['result']
 	return true;
}

function paymode_Init(){
	//(1)空值
	if( $("#paymode").val() == '' ){
		$$('uprepayamt').value = 0.00;
		$('#uprepayamt').attr({readonly:false, disabled:false});
		$$('factpayamt').value = 0.00;
		$('#factpayamt').attr({readonly:false, disabled:false});
		$('#payinaccbank').attr({readonly:true, disabled:true});
		//ydl.attr('payinaccbank', 'required');
		$('label[for="payinaccbank"]').hide();
		$('#payinaccbank').parent().hide();
		$('label[for="styhdm"]').hide();
		$('#styhdm').parent().hide();
		$('label[for="cstbankaccname"]').hide();
		$('#cstbankaccname').parent().hide();
		$('label[for="basebankaccnum"]').hide();
        $('#basebankaccnum').parent().hide();
	//(2)暂存款转入
	}else if( $("#paymode").val() == '3' ){
		$("#uprepayamt").val($("#spayamt").val());
		$("#uprepayamt").blur();
		ydl.attr('uprepayamt', 'readonly', true);
		$$('factpayamt').value = 0.00;
		$("#factpayamt").blur();
		ydl.attr('factpayamt', 'readonly', true);
		$$('payinaccbank').value = '';
		$('#payinaccbank').attr({readonly:true, disabled:true});
		ydl.removeAttr('payinaccbank', 'required');
		//受托银行信息，实时结算用
		$('label[for="payinaccbank"]').hide();
        $('#payinaccbank').parent().hide();
        $('label[for="styhdm"]').hide();
        $('#styhdm').parent().hide();
        $('label[for="cstbankaccname"]').hide();
        $('#cstbankaccname').parent().hide();
        $('label[for="basebankaccnum"]').hide();
        $('#basebankaccnum').parent().hide();
	//(3)实时结算
	}else if( $("#paymode").val() == '7'  ){//缴款方式
        //1002:中国农业银行股份有限公司贵港分行,1001:中国工商银行股份有限公司贵港市贵城支行,
        //1003:中国银行股份有限公司贵港分行,1004:中国建设银行股份有限公司贵港分行
        //1005:交通银行股份有限公司贵港分行,1006:贵港市区农村信用合作联社
        //1017:北部湾银行贵港分行,1018:柳州银行贵港分行
        //1019:邮储银行贵港分行
        //var fkyhArr = ['1002','1001','1003','1004','1005','1006','1017','1018','1019'];
        //402:农村信用合作联社,313:北部湾银行,314:柳州银行,403:邮政储蓄银行,102:中国工商银行
        //103:中国农业银行,104:中国银行,105:中国建设银行,301:交通银行
        /*var stydmArr = ['103','102','104','105','301','402','313','314','403'];
        for(var i = 0; i < stydmArr.length; i++){
           if(stydmArr[i] == $('#styhdm').val()){
                $("#payinaccbank").val(fkyhArr[i]);
           }
        }*/
        $("#payinaccbank").val($("#styhdm").val());
		$$('uprepayamt').value = 0.00;
		$("#uprepayamt").blur();
		ydl.attr('uprepayamt','readonly',false);//暂收户转出金额
		ydl.attr('uprepayamt','disabled',false);
		$("#factpayamt").val($("#spayamt").val());
		$("#factpayamt").blur();
		ydl.attr('factpayamt','readonly',false);//实际缴款金额
        ydl.attr('factpayamt','disabled',false);
		$('#payinaccbank').attr({readonly:true, disabled:true});
		//ydl.attr('payinaccbank', 'required');
		$('label[for="payinaccbank"]').show();
        $('#payinaccbank').parent().show();
        $('label[for="styhdm"]').show();
		$('#styhdm').parent().show();
		$('label[for="cstbankaccname"]').show();
		$('#cstbankaccname').parent().show();
		$('label[for="basebankaccnum"]').show();
        $('#basebankaccnum').parent().show();
		//ydl.selectByValue('payinaccbank',$$('payerbankcode').value);
		if( $$('styhdm').value == '' || $$('basebankaccnum').value == '' || $$('cstbankaccname').value == '' ){
			ydl.alert('单位受托信息不全,请携单位信息变更登记表到前台进行修改!');
			return  false;
		}

	}
}

function check_preusebal(){
	var dUPreUseBal 	= parseFloat(ydl.delComma($("#upreusebal").val()));
	var dSPayAmt 		= parseFloat(ydl.delComma($("#spayamt").val()));
	var dSupupreusebal 	= parseFloat(ydl.delComma($("#supupreusebal").val()));
	// 验证暂收款余额不足
	if( $("#paymode").val() == '3' ){
		if( !ydl.validator('paymode',{
			rule: 	function(){
					if( dUPreUseBal  < dSPayAmt ){
						return false;
					}
					return true;
				},
			message:'暂收款余额不足'}) ) {
			//ydl.selectByValue('paymode', '' );
			$("#uprepayamt").val() = 0.00;
			$("#factpayamt").val() = 0.00;
			return false;
		}
	}
	// 验证暂收款余额不足
	if($$('paymode').value == '8' ){
		if( !ydl.validator('paymode',{
			rule: function(){
					if( dSupupreusebal  < dSPayAmt ){
						return false;
					}
					return true;
				},	message:'上级暂收款余额不足'}) ){
			ydl.selectByValue('paymode', '' );
			$$('uprepayamt').value = 0.00;
			$$('factpayamt').value = 0.00;
			return false;
		}
	}
	return true;
}

//从系统中获取个人补缴总金额和单位补缴总金额
function getSuppAmt(begym, endym,gryjce,dwyjce) {
	var amtArray = new Array(0.00,0.00);
	//传入参数非空
	if(gryjce != '' && begym != '' && endym != ''&& dwyjce != '') {
		var begdate = begym + "-01";
		var enddate = endym + "-01";
		var months = ydl.dateDiff(begdate, enddate, 'm');
		if(months >= 0) {
			amtArray = new Array((gryjce * (months + 1)).toFixed(2),(dwyjce * (months + 1)).toFixed(2));
		}
	}
	return amtArray;
}


//检查日期格式是否正确
function isDate(date) {
    var testDate = date + "-01";
	return ydl.isValidDate(testDate);
}

// 暂存调用保存接口
$('#b_flow_h').on('click',function(){
	erecord.valSave(options_NZR);
});

//表单提交时执行
thisTab.form_validate = function () {

	return true;
}

]]></script>
  </scripts>
  <ajax>
  <query id="getPeoplenum" desc="" trigger="" message="">
      <sql>="select count( distinct unitaccnum1 ) as spaynum , sum(amt1) as spayamt from dp077 where instance="+_IS+" "</sql>
   </query>
  </ajax>
  <containers>
    <container type="table" id="form_container" cols="4" layout="fit" uid="container-271434e3393594d0532441477dc9b566">
      <component type="label" for="dwzh">单位账号：</component>
      <component id="dwzh" type="input" subtype="text" maxlength="12" fromdic="true" required="true" width="35%" readonly="true">=getUserExtInfo('dwzh')</component>
      <component type="label" for="upreusebal">暂收户可用余额：</component>
      <component id="upreusebal" type="input" subtype="money" maxlength="18" fromdic="true" datatype="money" declen="2" readonly="1" suffix="元">=upreusebal</component>
      <component type="label" for="dwmc">单位名称：</component>
      <component id="dwmc" type="input" subtype="text" fromdic="true" readonly="true" maxlength="128" width="90%" colspan="3">=_ORGNAME</component>
      <component type="label" for="spayamt">补缴金额：</component>
      <component id="spayamt" type="input" subtype="money" maxlength="18" required="true" fromdic="true" datatype="money" declen="2" suffix="元" readonly="1"></component>
      <component type="label" for="spaynum">补缴人数：</component>
      <component id="spaynum" type="input" subtype="text" fromdic="true" required="true" datatype="int" declen="0" maxlength="5" readonly="1"></component>
      <component type="label" for="speflag">定额检查标志：</component>
      <component id="speflag" type="multivalue" subtype="select" value="=speflag" required="true" fromdic="false">
        <sql datasource=""/>
        <item label="是" value="0"/>
        <item label="否" value="1"/>
        <item label="请选择..."/>
      </component>
      <component type="label" for="spaytype">补缴类型：</component>
      <component id="spaytype" type="multivalue" subtype="select" fromdic="true" value="=spaytype" required="true" readonly="rw == 'r'">
        <sql datasource="os_mdic"></sql>
        <item label="请选择..."/>
        <item label="按月欠缴补缴" value="2"/>
        <item label="差额少缴补缴" value="4"/>
      </component>
      <component type="label" for="paymode">缴款方式：</component>
      <component id="paymode" type="multivalue" subtype="select" fromdic="true" value="=paymode" required="true" readonly="rw == 'r'">
        <sql datasource="os_mdic"></sql>
        <item label="请选择..."/>
        <item label="暂收款转入" value="3"/>
        <item label="实时结算" value="7"/>
      </component>
      <component type="label" for="factpayamt">实际缴款金额：</component>
      <component id="factpayamt" type="input" subtype="money" maxlength="18" fromdic="true" datatype="money" declen="2" suffix="元" required="1" readonly="rw == 'r'">=factpayamt</component>
      <component type="label" for="uprepayamt">预缴户转出金额：</component>
      <component id="uprepayamt" type="input" subtype="money" maxlength="18" fromdic="true" datatype="money" declen="2" suffix="元">=uprepayamt</component>
      <component type="label" for="payinaccbank">划入银行：</component>
      <component id="payinaccbank" type="multivalue" subtype="select" fromdic="true" value="=styhdm" readonly="true">
        <sql datasource="os_mdic">bsp.dp.fkyh</sql>
        <item label="请选择..."/>
        <item label="=paraval" value="=paraname"/>
      </component>
      <component type="label" for="styhdm">受托银行代码：</component>
      <component id="styhdm" type="multivalue" subtype="select" fromdic="true" value="=styhdm" readonly="true">
        <sql datasource="os_mdic">bsp.dp.styhdm</sql>
        <item label="请选择..."/>
        <item label="=paraval" value="=paraname"/>
      </component>
      <component type="label" for="basebankaccnum">基本银行账号：</component>
      <component id="basebankaccnum" type="input" subtype="text" maxlength="30" fromdic="true" readonly="true">=basebankaccnum</component>
      <component type="label" for="cstbankaccname">受托银行账户名称：</component>
      <component id="cstbankaccname" type="input" subtype="text" maxlength="255" fromdic="true" width="90%" readonly="true">=cstbankaccname</component>
      <!--<component type="label" for="vounum">票据号：</component>
      <component id="vounum" type="input" subtype="text" maxlength="30" fromdic="true" colspan="3">=vounum</component>-->
      <component type="hidden" id="wtinstcode">=wtinstcode</component>
      <component type="blank"/>
      <component type="blank"/>
    </container>

    <container type="box" id="datalist_container" layout="auto-height no-result-info" uid="container-7143b3da589b6ac6594e0c44795bce66">
	 <component id="datalist1" type="datalist" paging="true" layout="auto-height no-result-info" allowinsert="true" allowupdate="true" allowdelete="true" pagesize="10" showrowid="true" dialogedit="0" allowexport="true" allowimport="true" saveimportfile="true" caption="个人补缴批量录入" allowprint="false" version="1" searchbox="false" compatible="0" exportfilename="个人补缴列表" clearbeforeimport="true" template="false">
        <columns>
          <col id="grzh" desc="个人账号" coltype="2" hidden="false" required="true" ischar="true" datatype="validchar" dict="none" importcol="0" keycol="false"/>
          <col coltype="3" id="o_grzh" desc="o_个人账号" hidden="true" dict="none"/>
          <col id="xingming" desc="个人姓名" coltype="2" hidden="false" required="false" ischar="true" maxlength="40" datatype="validchar" dict="none" importcol="1" keycol="false"/>
          <col id="zjhm" desc="证件号码" coltype="2" hidden="false" required="false" ischar="true" datatype="validchar" dict="none" importcol="2" keycol="false"/>
          <col id="amt2" desc="单位补缴金额" coltype="2" hidden="false" required="false" ischar="false" maxlength="10" datatype="money" dict="none" importcol="3" keycol="false"/>
          <col id="payvouamt" desc="个人补缴金额" coltype="2" hidden="false" required="false" ischar="false" maxlength="10" datatype="money" dict="none" importcol="4" keycol="false"/>
          <col id="amt1" desc="合计(元)" coltype="2" hidden="false" required="true" ischar="false" maxlength="10" datatype="money" dict="none" importcol="5" keycol="false"/>
          <col id="begym" desc="开始年月(格式yyyy-mm)" coltype="2" hidden="false" required="true" ischar="true" maxlength="7" datatype="validchar" dict="none" importcol="6" keycol="false"/>
          <col id="endym" desc="截止年月(格式yyyy-mm)" coltype="2" hidden="false" required="true" ischar="true" maxlength="7" datatype="validchar" dict="none" importcol="7" keycol="false"/>
          <col id="reason" desc="备注" coltype="2" hidden="false" required="false" ischar="true" datatype="validchar" dict="none" importcol="8" keycol="false"/>
          <col id="seqno" desc="序号" coltype="3" hidden="true" required="false" ischar="false" dict="none" keycol="false"/>
          <col id="gryjce" desc="个人月缴存额" coltype="3" hidden="true" required="false" ischar="true" maxlength="10" datatype="validchar" dict="none" importcol="9" keycol="false"/>
          <col id="dwyjce" desc="单位月缴存额" coltype="3" hidden="true" required="false" ischar="true" maxlength="10" datatype="validchar" dict="none" importcol="10" keycol="false"/>
        </columns>
        <sqls datasource="ds_biz">
          <sql type="insert">="insert into dp077(unitaccnum1,unitaccname1,unitaccnum2,amt1,accnum1,accnum2,accname1,transdate,agentinstcode,agentop,dpbusitype,seqno,instance,freeuse1,amt2,payvouamt,reason) values('"+grzh[#]+"', '"+xingming[#]+"', '"+zjhm[#]+"', '"+amt1[#]+"','"+begym[#]+"','"+endym[#]+"','"+getRealUserExtInfo('dwzh')+"',CURRENT_DATE,'07750011','9999','81',(select NVL(max(t.seqno),0)+1 from dp077 t where t.instance="+_IS+" and dpbusitype='81'),'"+_IS+"','1','"+amt2[#]+"','"+payvouamt[#]+"','"+reason[#]+"')"</sql>
          <sql type="select">="select seqno, unitaccnum1 as grzh, unitaccnum1 as o_grzh,unitaccname1 as xingming,unitaccnum2 as zjhm,amt1 ,accnum1 as begym,accnum2 as endym,amt2 , payvouamt, reason,agentinstcode,agentop,dpbusitype from dp077 where instance='"+_IS+"'</sql>
          <sql type="update">="update dp077 set unitaccnum1='"+grzh[#]+"',unitaccname1='"+xingming[#]+"',unitaccnum2='"+zjhm[#]+"',amt1="+amt1[#]+",accnum1='"+begym[#]+"', accnum2='"+endym[#]+"', amt2="+amt2[#]+", payvouamt="+payvouamt[#]+",reason='"+reason[#]+"' where instance= "+_IS+" and dpbusitype='81' and seqno="+seqno[#]</sql>
          <sql type="delete">="delete from dp077 where instance= "+_IS+" and dpbusitype='81' and seqno="+seqno[#]</sql>
        </sqls>
      </component>
    </container>

    <container uid="container-6bb6c4f8319b49dea2cbe7271612593b" type="table" layout="fit" cols="4" id="container-6bb6c4f8319b49dea2cbe7271612593b">
      <component type="label" for="dwyjce">单位月缴存额：</component>
      <component id="dwyjce" type="input" subtype="money" maxlength="18" fromdic="true" datatype="money" declen="2" suffix="元" readonly="1"></component>
      <component type="label" for="gryjce">个人月缴存额：</component>
      <component id="gryjce" type="input" subtype="text" fromdic="true" datatype="int" declen="0" maxlength="5" readonly="1" suffix="元"></component>
      <component type="label" for="yjcze">月缴存总额：</component>
      <component id="yjcze" type="input" subtype="text" fromdic="true" datatype="int" declen="0" maxlength="5" readonly="1" suffix="元"></component>
      <component type="blank"/>
      <component type="blank"/>
    </container>

    <container uid="container-58998128033d4ca2ae9c2899a7af12cc" type="hidden" id="container-58998128033d4ca2ae9c2899a7af12cc">
      <component id="morecheflag" type="hidden">=morecheflag</component>
      <component id="supunittype" type="hidden">=supunittype</component>
      <component id="unitacctype" type="hidden">=unitacctype</component>
      <component id="dwzhzt" type="hidden">=zt</component>
      <component id="finalflag" type="hidden">=finalflag</component>
      <component id="supdwzh" type="hidden">=supdwzh</component>
      <component id="payerbankcode" type="hidden">=payerbankcode</component>
      <!--<component id="dwjcbl" type="hidden">=unitprop</component>
      <component id="grjcbl" type="hidden">=indinorprop</component>
      <component id="bankcode" type="hidden">=bankcode</component>
      <component id="_smlsh" type="hidden"/>
      <component id="ywflbm" type="hidden">043109</component>
      <component id="regnum" type="hidden">=regnum</component>-->
    </container>

  </containers>
</page>
