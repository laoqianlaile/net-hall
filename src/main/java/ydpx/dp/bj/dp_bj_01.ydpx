<?xml version="1.0" encoding="UTF-8"?>

<page template="0401" version="2.0" formaction="">
  <info>
    <description title="=pagetit"/>
    <editlogs>
      <log editor="Y01115(离线)" edittime="2018-09-03 09:07:05"/>
      <log editor="Y00585(离线)" edittime="2019-04-19 16:43:05"/>
    </editlogs>
  </info>
  <scripts>
    <script><![CDATA[//页面加载后执行
thisTab.pageOnload = function () {
      ydl.setValue('sjje',0.00);
    //点击添加时先校验页面是否选择缴款方式和补缴类型
    $("button[data-button-type='add'],button[data-button-type='import']").click(function(){
        if(!ydl.validator('bjlx',{required:true,message:'请先填写【补缴类型】！'}) ) {
              return false;
        }
        if(!ydl.validator('jkfs',{required:true,message:'请先填写【缴款方式】！'}) ) {
              return false;
        }

        var bjlx = $('#bjlx').val();
        if(bjlx=='0'){
            ydl.attr('datalist1_editor_xingming','readonly', true);	//姓名
            ydl.attr('datalist1_editor_zjhm','readonly', true);		//证件号码
            ydl.attr('datalist1_editor_bjje','readonly', true);  //公积金补缴金额
        }else if(bjlx=='1'){
            ydl.attr('datalist1_editor_xingming','readonly', true);	//姓名
            ydl.attr('datalist1_editor_zjhm','readonly', true);		//证件号码
            ydl.attr('datalist1_editor_bjje','readonly', false);  //公积金补缴金额
        }
    });

    //监听动态列表个人账号
    $('#datalist1_editor_grzh,#datalist1_editor_jzny,#datalist1_editor_ksny').change(function(){
        //个人信息查询
       var grzh = $('#datalist1_editor_grzh').val();
       var ksny = $('#datalist1_editor_ksny').val();
       var jzny = $('#datalist1_editor_jzny').val();
       if(grzh != "" && ksny != "" && jzny != ""){
            ydl.sendCommand('grxxcx',{'grzh':grzh,'ksny':ksny,'jzny':jzny},function(data,code,msg){
                if (code != '00000000') {
                    ydl.alert({'code':code, 'message':msg});
                }else{
                    ydl.setValue('datalist1_editor_xingming',data.xingming);
                    ydl.setValue('datalist1_editor_zjhm',data.zjhm);
                    var bjlx = $('#bjlx').val();
                    if(bjlx=='0'){
                        ydl.setValue('datalist1_editor_bjje',data.bjje);
                    }
                }
            });
       }
    });

    //监听缴款方式为暂存款转出时校验暂存户可用余额是否大于实缴金额
    $('#jkfs').change(function(){
        ydl.validator.clear('zchkyye');
       //缴款方式
       var jkfs = this.value
       var zchkyye = $('#zchkyye').val();//暂存户可用余额
       var sjje = $('#sjje').val();//实缴金额
        var zchzc = ydl.mudic.getValByMask('bsp.dp.jkfs','zchzc');//暂存户转出
    	var ssjs = ydl.mudic.getValByMask('bsp.dp.jkfs','ssjs');//实时结算
   		var ts = ydl.mudic.getValByMask('bsp.dp.jkfs','ts');//托收
       if(zchzc==jkfs){
       		// 若为暂存户转出，不需要提供付款银行信息
        	$('#fkyh').val("");
       		$('#fkzh').val("");
        	$('#fkzhm').val("");
        	ydl.removeAttr('fkyh','required');
        	ydl.removeAttr('fkzh','required');
        	ydl.removeAttr('fkzhm','required');
        	ydl.attr('fkyh','readonly');
	        ydl.attr('fkzh','readonly');
	        ydl.attr('fkzhm','readonly');
	        ydl.attr('fkyh','hidden');
	        ydl.attr('fkzh','hidden');
	        ydl.attr('fkzhm','hidden');
	        $("#fkzh_label").hide();
	        $("#fkzhm_label").hide();
           if(!ydl.validator('zchkyye',{rule:parseFloat(sjje)<parseFloat(zchkyye),message:'暂存户可用余额不足!'})){
                   return false;
            };
            if(parseFloat(sjje)>0){
                var zchzcje = parseFloat(sjje);//暂存户转出金额
                $('#zchzcje').val(zchzcje);
                $('#sjje').val('0.00');
            }
       }else if(jkfs==ssjs || jkfs==ts){
            $('#zchzcje').val('0.00');
            // 若为实时结算或托收，付款银行信息反显且不可修改
            $('#fkyh').val(poolSelect['fkyh']);
	        $('#fkzh').val(poolSelect['fkzh']);
	        $('#fkzhm').val(poolSelect['fkzhm']);
	        ydl.removeAttr('fkyh','required');
        	ydl.removeAttr('fkzh','required');
        	ydl.removeAttr('fkzhm','required');
	        ydl.attr('fkyh','readonly');
	        ydl.attr('fkzh','readonly');
	        ydl.attr('fkzhm','readonly');
	         ydl.attr('fkyh','hidden',false);
	        ydl.attr('fkzh','hidden',false);
	        ydl.attr('fkzhm','hidden',false);
	        $("#fkzh_label").show();
	        $("#fkzhm_label").show();
       }else{
       		$('#zchzcje').val('0.00');
            // 若为现金或转账，付款银行信息反显可修改
            $('#fkyh').val(poolSelect['fkyh']);
	        $('#fkzh').val(poolSelect['fkzh']);
	        $('#fkzhm').val(poolSelect['fkzhm']);
	        ydl.removeAttr('fkyh','readonly');
	        ydl.removeAttr('fkzh','readonly');
	        ydl.removeAttr('fkzhm','readonly');
	        ydl.attr('fkyh','required');
	        ydl.attr('fkzh','required');
	        ydl.attr('fkzhm','required');
	        ydl.attr('fkyh','hidden',false);
	        ydl.attr('fkzh','hidden',false);
	        ydl.attr('fkzhm','hidden',false);
	        $("#fkzh_label").show();
	        $("#fkzhm_label").show();
       }
       $("button[data-button-type='save']").click();
    });
}
//动态列表编辑框初始化
thisTab.datalist_dialoginit_datalist1 = function(){
    //只读控制
    ydl.attr('datalist1_editor_xingming','readonly', true);	//姓名
    ydl.attr('datalist1_editor_zjhm','readonly', true);		//证件号码
    ydl.attr('datalist1_editor_bjje','readonly', true);  //公积金合计金额
}

thisTab.datalist_callback_datalist1 = function(bodyRows){
	var listhjje = 0.00;	//列表合计金额
	var rows = 0;
	//合计实缴为空，默认0.00
	if(ydl.getValue('sjje')==''){
		ydl.setValue('sjje', 0.00);
	}

    if($('#datalist1 tbody tr').length==0){
        ydl.setValue('bjrs',0);
        ydl.setValue('sjje',0.00);
        ydl.setValue('zchzcje',0);
    }
    if($('#datalist1 tbody tr').length>0){
        var jkfs = $('#jkfs').val();
        if(typeof jkfs == "undefined" || jkfs == null || jkfs == ""){
            ydl.alert('请选择缴款方式!');
            return false;
        }
        //金额字段去掉所有的","
        var zchkyye = $('#zchkyye').val();
		ydl.sendCommand('cmd02',{"jkfs":jkfs,"zchkyye":zchkyye},function(data,code,msg){
        	if (code != '00000000') {
        	    ydl.alert({'code':code, 'message':msg});
        	}else{
        	    var jkfs = $('#jkfs').val();
                var zchzc = ydl.mudic.getValByMask('bsp.dp.jkfs','zchzc');
                if(jkfs==zchzc){
                    ydl.setValue('sjje', "0.00");	//实缴金额
                }else{
        	        ydl.setValue('sjje', data.sjje);	//实缴金额
        	    }
                ydl.setValue('bjrs', data.bjrs);			//人数
                ydl.setValue('zchzcje', data.zchzcje);			//暂存户转出金额
                var jg = data.jg;
                if(!ydl.validator('zchkyye',{required:true,rule:!(jg =='1'),message:'暂存户可用余额不足!'})){
                    return false;
                };
        	}
        });
	}
}


//动态列表弹框限制
thisTab.datalist_validate_datalist1= function () {
    ydl.validator.clear('datalist1_editor_ksny,datalist1_editor_jzny');
    var ksny = $('#datalist1_editor_ksny').val();//开始年月
    var jzny = $('#datalist1_editor_jzny').val();//截止年月
    //开始年月不能为空
    if(!ydl.validator('datalist1_editor_ksny',{required:true,rule:!(ksny ==''),message:'【开始年月】不能为空!'})){
    		return false;
    };

    //截止年月不能为空
    if(!ydl.validator('datalist1_editor_jzny',{required:true,rule:!(jzny ==''),message:'【截止年月】不能为空!'})){
    	return false;
    };
    //开始年月不能大于截止年月
    if(!ydl.validator('datalist1_editor_ksny',{required:true,rule:ksny<=jzny,message:'【开始年月】不能大于【截止年月】!'})){
        return false;
    };
    //截止年月不小于开始年月
    if(!ydl.validator('datalist1_editor_jzny',{required:true,rule:jzny>=ksny,message:'【截止年月】不能小于【开始年月】!'})){
        return false;
    };
    //当前年月
    var dqny = ydl.today().slice(0,7);
    //校验截止年月不能大于当前年月
    if(!ydl.validator('datalist1_editor_jzny',{rule:jzny<=dqny,message:'【截止年月】不能大于当前年月!'})){
        return false;
    };
    //缴至年月
    var jzny1 = $('#jzny').val();
    //校验截止年月不能大于缴至年月
    if(!ydl.validator('datalist1_editor_jzny',{rule:jzny<=jzny1,message:'【截止年月】不能大于【缴至年月】!'})){
            return false;
     };
    if(!ydl.validator('datalist1_editor_bjje',{rule:Number($('#datalist1_editor_bjje').val())>0,message:'补缴金额应大于0!'})) return false;
    return true;
}


    ///小数位不够，用0补足位数
    ///要处理的数字
    ///生成的小数位数
function changeDecimalBuZero(number, bitNum) {
    var f_x = parseFloat(number);
    if (isNaN(f_x)) {
        return 0;
    }
    var s_x = number.toString();
    var pos_decimal = s_x.indexOf('.');
    if (pos_decimal < 0) {
        pos_decimal = s_x.length;
        s_x += '.';
    }
    while (s_x.length <= pos_decimal + bitNum) {
        s_x += '0';
    }
    return s_x;
}





//表单提交时执行
thisTab.form_validate = function () {
    var zchkyye = $('#zchkyye').val();//暂存户可用余额
    var sjje = $('#sjje').val();//实缴金额
    var jkfs = $('#jkfs').val();
    if(ydl.mudic.getValByMask('bsp.dp.jkfs','zchzc')==jkfs){
        if(!ydl.validator('zchkyye',{rule:parseFloat(sjje)<parseFloat(zchkyye),message:'暂存户可用余额不足!'})){
                return false;
        };
     }
    if($('#datalist1 tbody tr').length==0){
		ydl.alert("请至少添加一条补缴人员信息！");
		return false;
	}
	return true;
}

]]></script>
  </scripts>
  <dataset/>
  <ajax/>
  <containers>
    <container type="table" id="ct_form" cols="4" uid="ct_form">
      <component type="label" for="dwzh">单位账号：</component>
      <component type="plain">=getUserExtInfo('dwdjh')</component>
      <component type="label" for="dwmc">单位名称：</component>
      <component type="plain">=getUserExtInfo('dwmc')</component>
      <component type="label" for="jzny">缴至年月：</component>
      <component id="jzny" type="input" subtype="date" maxlength="7" required="true" readonly="true" fromdic="false">=jzny</component>
      <component type="label" for="bjlx">补缴类型：</component>
      <component id="bjlx" type="multivalue" subtype="select" required="true" fromdic="false" value="=bjlx">
        <sql datasource="os_mdic">bsp.dp.sptype</sql>
        <item label="请选择..."/>
        <item label="=PARAVAL" value="=PARANAME"/>
      </component>
      <component type="label" for="jkfs">缴款方式：</component>
      <component id="jkfs" type="multivalue" subtype="select" fromdic="false" required="true" value="=jkfs">
        <sql datasource="os_mdic">bsp.dp.jkfs</sql>
        <item label="请选择..."/>
        <item label="=PARAVAL" value="=PARANAME"/>
      </component>
      <component type="label" for="zchkyye">暂存户可用余额：</component>
      <component id="zchkyye" type="input" subtype="money" readonly="true" suffix="元" fromdic="false">=zchkyye</component>
      <component type="label" for="bjrs">补缴人数：</component>
      <component id="bjrs" type="input" subtype="text" readonly="true" required="false" fromdic="false" suffix="人">=bjrs</component>
      <component type="label" for="sjje">实缴金额：</component>
      <component id="sjje" type="input" subtype="money" fromdic="false" readonly="true" suffix="元">=sjje</component>
      <component type="label" for="zchzcje">暂存户转出金额：</component>
      <component id="zchzcje" type="input" subtype="money" fromdic="false" readonly="true" suffix="元">=zchzcje</component>
      <component type="label" for="fkyh">付款银行：</component>
      <component id="fkyh" type="multivalue" subtype="select" required="true" fromdic="false" value="=fkyh">
        <sql datasource="os_mdic">bsp.dp.fkyh</sql>
        <item label="请选择..."/>
        <item label="=paraval" value="=paraname"/>
      </component>
      <component id="fkzh_label" type="label" for="yhzh">付款账号：</component>
      <component id="fkzh" type="input" subtype="text" fromdic="false" required="true">=fkzh</component>
      <component  id="fkzhm_label" type="label" for="yhzhmc">付款账户名：</component>
      <component id="fkzhm" type="input" subtype="text" fromdic="false" required="true">=fkzhm</component>
    </container>
    <container uid="container-1" type="box" layout="auto-height" id="container-1">
      <component caption="个人补缴批量录入" id="datalist1" cols="4" type="datalist" paging="true" layout="fit" allowinsert="true" allowdelete="true" allowupdate="true" allowprint="false" allowimport="true" allowexport="false" pagesize="10" version="1" searchbox="false" compatible="0" showrowid="true" dialogedit="2" saveimportfile="false" clearbeforeimport="true" template="false">
        <columns>
          <col id="xh" desc="行号" coltype="3" hidden="true" required="true" ischar="false" datatype="int" dict="none" sort="false" negative="false"/>
          <col id="grzh" desc="个人账号" coltype="2" hidden="false" required="true" ischar="false" importcol="0" exportcol="0" dict="none" sort="false" negative="false"/>
          <col id="ksny" desc="开始年月" coltype="2" hidden="false" datatype="yyyy-mm" required="true" ischar="false" importcol="3" exportcol="3" dict="none" sort="false" negative="false"/>
          <col id="jzny" desc="截止年月" coltype="2" hidden="false" datatype="yyyy-mm" required="true" ischar="false" importcol="4" exportcol="4" dict="none" sort="false" negative="false"/>
          <col id="xingming" desc="姓名" coltype="2" hidden="false" required="true" ischar="false" importcol="1" exportcol="1" dict="none" sort="false" negative="false" readonly="true"/>
          <col id="zjhm" desc="证件号码" coltype="2" hidden="false" required="true" ischar="false" importcol="2" exportcol="2" dict="none" sort="false" negative="false"/>
          <col id="bjyy" desc="补缴原因" coltype="2" hidden="false" required="true" ischar="true" maxlength="2" datatype="validchar" dict="dynamic" datasource="os_mdic" importcol="5" sort="false" negative="false">bsp.dp.spayreason</col>
          <col id="bjje" desc="补缴金额" coltype="2" hidden="false" required="true" ischar="false" importcol="6" exportcol="6" maxlength="18" declen="2" datatype="money" dict="none" sort="false" negative="false"/>
        </columns>
        <sqls datasource="ds_biz">
          <sql type="insert"><![CDATA[insert into dp077 (seqno,dpbusitype,accname1,accnum1,certinum,unitaccnum1,unitaccnum2,reason,amt1,instance) values
              ((select NVL(max(t.seqno),0)+1 from dp077 t where t.instance=#{_IS,jdbcType=INTEGER} and dpbusitype='81'), '81', #{xingming,jdbcType=VARCHAR}, #{grzh,jdbcType=VARCHAR}, #{zjhm,jdbcType=VARCHAR}, #{ksny,jdbcType=VARCHAR},#{jzny,jdbcType=VARCHAR},#{bjyy,jdbcType=VARCHAR} ,#{bjje,jdbcType=INTEGER} ,#{_IS,jdbcType=INTEGER})]]></sql>
          <sql type="select"><![CDATA[select seqno as xh, accname1 as xingming, accnum1 as grzh, certinum as zjhm, unitaccnum1 as ksny, unitaccnum2 as jzny, certinum as zjhm, reason as bjyy, amt1 as bjje,instance from dp077 where instance=#{_IS,jdbcType=INTEGER} AND dpbusitype='81' ]]></sql>
          <sql type="update"><![CDATA[update dp077 set accname1 =#{xingming,jdbcType=VARCHAR}, accnum1 =#{grzh,jdbcType=VARCHAR}, certinum =#{zjhm,jdbcType=VARCHAR}, unitaccnum1 =#{ksny,jdbcType=VARCHAR} ,unitaccnum2 =#{jzny,jdbcType=VARCHAR},reason =#{bjyy,jdbcType=VARCHAR},amt1 =#{bjje,jdbcType=INTEGER} where seqno=#{xh,jdbcType=INTEGER} and instance=#{_IS,jdbcType=INTEGER} and dpbusitype='81']]></sql>
          <sql type="delete"><![CDATA[delete from dp077 where seqno=#{xh,jdbcType=INTEGER} and instance=#{_IS,jdbcType=VARCHAR} ]]></sql>
        </sqls>
      </component>
    </container>
    <container type="hidden" id="container-481154b6c25721119e65495b6a588460" uid="container-481154b6c25721119e65495b6a588460">
    </container>
  </containers>
</page>
