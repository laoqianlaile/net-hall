<?xml version="1.0" encoding="UTF-8"?>

<page template="0401" version="2.0" formaction="">
  <info>
    <description title="=pagetit"/>
    <editlogs>
      <log editor="0000(离线)" edittime="2017-12-13 14:34:57"/>
    </editlogs>
  </info>
  <styles>
  	<style include="/common/css/yysq.css" />
  </styles>
  <scripts>
    <script><![CDATA[//页面加载后执行
    var dateObj; //当前日历所在年月
    var calendarList;//初始化日历
    var $timeDialog; //时间段选择窗口
    //开始月份
	var startYearMonth ;
	//结束月份
	var endYearMonth;
	var isChange ="-1" // 网点是否变化-1初始化0变化1未变
	thisTab.pageOnload = function () {
		$("#xs_wddz").addIcon("search");
		
		$("#yyrq_info").html("可选择从今日起，<b>"+poolSelect["zdyyts"]+"天之内</b>日期！");
		// 设置可选择网点下拉列表
		$('#yywd').html(ydl.common.blankOption + ydl.createOptions($.map($.parseJSON(poolSelect["kyywd"]),function(i,v){
			return {"value":v,"text":i};
		}))).combobox('refresh');
		hideSjd();
		// 设置默认值
		var wdbh = poolSelect["wdbh"];
		var sjdbh = poolSelect["sjdbh"];
		var yyrq = poolSelect["yyrq"];
		if (sjdbh != '' && sjdbh != null && yyrq != '' && yyrq != null && wdbh != '' && wdbh != null ) {
			ydl.setValue('yywd', wdbh);
			ydl.setValue('wdbh', poolSelect["wdbh"]);
			ydl.setValue('wdmc', poolSelect["wdmc"]);
			ydl.setValue('yyrq', poolSelect["yyrq"]);
			ydl.setValue('sjdbh', poolSelect["sjdbh"]);
			ydl.setValue('sjd', poolSelect["sjd"]);
			initSjdxx(poolSelect["sjdbh"]);
		} 
		
		var startDate = poolSelect["startDate"];
		var endDate = poolSelect["endDate"];
		//开始月份
		startYearMonth = startDate.split('-')[0] + '-' + startDate.split('-')[1];
		//结束月份
		endYearMonth = endDate.split('-')[0] + '-' + endDate.split('-')[1];
		//可选日期信息
		calendarList = $.parseJSON(poolSelect["calendarList"]);
		// 初始化日历显示容器
		initCalendar($('#rqxz'), startYearMonth, endYearMonth, calendarList);
				//点击显示选择时间段模态框
		$('body').on('click', '.item-curMonth', function() {
			// 判断两次选中的日期是否变化
			if($(this).hasClass('item-select')){
				$('.modal').find('.modal-title').data('ischange', false);
			}else{
				$('.modal').find('.modal-title').data('ischange', true);
			}
			//添加选中标志
			$(this).addClass('item-selecting');
			// 设置画面显示
			$('#yyrq').val($(this).attr("data"));
			//添加选中样式
			addSelect();
		});	
		//绑定上一月按钮事件
		$('body').on('click', '.arrow-prev', function () { 
			var year = dateObj.getFullYear();
			var month = dateObj.getMonth() - 1;
			if(dateObj.getMonth() == 1){
				year = dateObj.getFullYear() - 1;
				month = 12;
			}
			//更新日期
			dateObj = new Date(year, month, 1);
			//左右按钮显隐
			titleBtn(year + '-' + (month + 1), startYearMonth, endYearMonth);
			//生成日历内容
		    showCalendar(calendarList);
		    //添加选中样式
			addSelect();
	    });
		//绑定下一月按钮事件
	    $('body').on('click', '.arrow-next', function () {
	    	var year = dateObj.getFullYear();
			var month = dateObj.getMonth() + 1;
			if(dateObj.getMonth() == 12){
				year = dateObj.getFullYear() + 1;
				month = 1;
			}
	    	//更新日期
	    	dateObj = new Date(year, month, 1);
	    	//左右按钮显隐
			titleBtn(year + '-' + (month + 1), startYearMonth, endYearMonth);
			//生成日历内容
		    showCalendar(calendarList);
		    //添加选中样式
			addSelect();
	    });
	}
	
	//初始化日历
	function initCalendar($ele, startYearMonth, endYearMonth, allData) { 
		var text = $('#yyrq').val();
		//赋初始日期值
		dateObj = text.length > 0 ? new Date((text).split('-')[0], (text).split('-')[1] - 1, 1) : new Date((startYearMonth).split('-')[0], (startYearMonth).split('-')[1] - 1, 1);
		//渲染日历结构
		renderDom($ele);
		//左右按钮显隐
		titleBtn(text.length > 0 ? text:startYearMonth, startYearMonth, endYearMonth);
		//生成日历内容
		showCalendar(allData);
		//添加选中样式
		addSelect();
	}
	
	//添加选中样式
	function addSelect() { 
		var text = $('#yyrq').val();
		//添加选中样式
		var calyear= parseInt((text).split('-')[0]);
		var year= parseInt(($('.calendar-title .title').text()).substring(0,4));
		var calmonth= parseInt((text).split('-')[1]);
		var month= parseInt(($('.calendar-title .title').text()).substring(5,7));
		 
		if(text.length > 0 && calyear == year && calmonth == month) {
			//清空选中样式
			$('.calendar').find('.item-curMonth').removeClass('item-select');
			//添加选中样式
			$.each($('.calendar').find('.item-curMonth'), function(i, item) {
				if(parseInt($(item).find('.item-day').text()) == parseInt((text).split('-')[2])) $(item).addClass('item-select');
			});	
		}
	}
	
	//渲染日历结构
	function renderDom($ele) {
		//日历头部
		var html = '<div class="calendar"><div class="calendar-title">' +
			'<span class="arrow arrow-prev" title="上一月">&lt;</span>' +
			'<span  class="title"></span>' +
			'<span class="arrow arrow-next" title="下一月">&gt;</span>' +
		'</div>';
		//日历体
		html += '<div class="calendar-body"><table class="table table-bordered calendar-table">' +
			'<thead class="calendar-week"><tr>' +
				'<th class="item">日</th>' +
				'<th class="item">一</th>' +
				'<th class="item">二</th>' +
				'<th class="item">三</th>' +
				'<th class="item">四</th>' +
				'<th class="item">五</th>' +
				'<th class="item">六</th>' +
			'</tr></thead>' +
			'<tbody class="calendar-date">';
		for(var i = 0; i < 6; i++) {
	        html += '<tr><td class="item"></td>' +
            '<td class="item"></td>' +
            '<td class="item"></td>' +
            '<td class="item"></td>' +
            '<td class="item"></td>' +
            '<td class="item"></td>' +
            '<td class="item"></td></tr>';
	    }
	    html += '</tbody></table></div></div>';
	    //添加元素到指定容器
	    $ele.append(html);
	}

	//生成日历内容
	function showCalendar(allData) {
		var year = dateObj.getFullYear();
	    var month = dateObj.getMonth() + 1;
	    var dateStr = returnDateStr(dateObj);
	    var firstDay = new Date(year, month - 1, 1); 
	    //标题
	    $('.calendar-title .title').text(year + '年' + dateStr.substr(5, 2)+"月");
	    //生成日历内容
	    $.each($('.calendar-date .item'), function(i, item) {
	    	var allDay = new Date(year, month - 1, i + 1 - firstDay.getDay());
	        var allDay_str = returnDateStr(allDay);
	        //填充内容
	         var yyxx = '';
	        if(allData[allDay_str] && month == allDay_str.substring(5,7)){
	        	if(allData[allDay_str].isfull !='' && allData[allDay_str].isfull == 1){
	       		 	yyxx ='已满';
	        	}
	        	if(allData[allDay_str].isfull !='' && allData[allDay_str].isfull == 0){
	       		 	yyxx = allData[allDay_str].syyys+'/'+allData[allDay_str].yys;
	        	}
	        }
	        $(item).html('<div class="item-day">' + allDay.getDate() + '</div><div class="item-counts">' 
	        		+ yyxx + '</div>').attr('data', allDay_str);
	        // 工作日
	        var gzr = ydl.mudic.getValByMask("ish.gg.yy.rqlx","GZR");
	        //区分可选和不可选日期 (日期为工作日)
	        if(returnDateStr(firstDay).substr(0, 7) === allDay_str.substr(0, 7) && allData[allDay_str] && allData[allDay_str].daytype== gzr) {
	        	allData[allDay_str].isfull == 1 ? $(item).attr('class', 'item item-notMonth') : $(item).attr('class', 'item item-curMonth');
	        }
	        else {
	        	$(item).attr('class', 'item item-notMonth');
	        }  
	        //添加今日样式
	        if (returnDateStr(new Date()) == allDay_str) {
		        $(item).addClass('item-curDay');
		        $(item).find(".item-counts").text('今日');
	        }
	    });
	}

	//格式化日期
	function returnDateStr(date) { 
		var year = date.getFullYear();
		var month = date.getMonth() + 1;
		var day = date.getDate();
		month = month < 10 ? ('0' + month) : ('' + month);
		day = day < 10 ? ('0' + day) : ('' + day);
		return year + '-' + month + '-' + day;
	}

	//控制日历头按钮显隐
	function titleBtn(m, startYearMonth, endYearMonth) {
		var mNum = parseInt((m).split('-')[0]) * 12 + parseInt((m).split('-')[1]);
		var startNum = parseInt((startYearMonth).split('-')[0]) * 12 + parseInt((startYearMonth).split('-')[1]);
		var endNum = parseInt((endYearMonth).split('-')[0]) * 12 + parseInt((endYearMonth).split('-')[1]);
		mNum > startNum ? $('.arrow-prev').show() : $('.arrow-prev').hide();
		mNum < endNum ? $('.arrow-next').show() : $('.arrow-next').hide();
	}
	$("#yyrq").addButton("选择日期",function(){
		// 判断是否第一次选择网点
		if(isChange=="-1" && "" != $("#wdbh").val() && "" == $("#yyrq").val()){
			// 重新获取日历
			refreshCalendar();
		}
		// 网点变化了则初始化日历
		if(isChange=="0" && "" != $("#wdbh").val()){
			// 重新获取日历
			refreshCalendar();
			isChange = "-1";
		}
		// 网点清空了
		if("" == $("#wdbh").val()){
			// 初始化日历显示容器
			$('.calendar').remove();
			calendarList = $.parseJSON(poolSelect["calendarList"]);
			initCalendar($('#rqxz'), startYearMonth, endYearMonth,calendarList);
		}
		$timeDialog.dialog("open");
	},"btn_wd");
	//初始化选择时间段模态框
	$timeDialog = ydl.makeDialog("timeDialog",{
		title: "选择日期",
		width: 500,
		height: 545,
		autoOpen: false,
		modal: true,
		buttons: {
			'确定': function(){
				if("" != $("#yyrq").val() && "" != $("#wdbh").val() && isChange){
					// 初始化选择的时间段信息
					initSjdxx("");
				}
				//隐藏模态框
				$timeDialog.dialog("close");
			},
			'关闭': function(){
				//隐藏模态框
				$timeDialog.dialog("close");
			}
		},
		shown: function(){
		},
		hidden: function(){
		}
	});
	// 初始化选择的时间段信息
	function initSjdxx(sjdbh){
		// 获取时间段信息
		ydl.sendCommand('getSJD',{},function(data){
			$('#group_sjdbh').html(ydl.createRadios($.parseJSON(data.json),"","",sjdbh,"sjdbh"));
			$('#group_sjdbh').find("label").find("ff").parent().find("input").attr("disabled",true);
    	});
	}
	// 重新加载日历
	function refreshCalendar(){
		// 获取日历
		$("#yyrq").val("");
		var wdbh = $("#wdbh").val();
		ydl.sendCommand('getCalendar',{"calendarList":poolSelect["calendarList"],"wdbh":wdbh},function(data){
			// 初始化日历显示容器
			$('.calendar').remove();
			calendarList = data;
			initCalendar($('#rqxz'), startYearMonth, endYearMonth,data);
    	});
	}
	// 预约网点事件
	var old_yywd="";
	$('#yywd').change(function () {
		var yywd = this.value;
		if (yywd != '') {
			// 设置网点信息
			$('#wdbh').val(yywd);
			$('#wdmc').val($('#yywd option:selected').text());
			// 判断网点是否变化
			if(old_yywd == yywd){
				isChange = "1";
			}else{
				if(old_yywd != ""){
					isChange = "0";
				}
				old_yywd = yywd;
			}
			// 已选择了日期，加载时间段
			if("" != $("#yyrq").val()){
				// 设置网点信息
				// 初始化选择的时间段信息
				initSjdxx("");
				hideSjd();
			}
		} else {
			$('#wdbh').val('');
			$('#wdmc').val('');
			hideSjd();
		}
	});
	// 隐藏时间段
	function hideSjd(){
		$("#group_sjdbh").html("&nbsp;&nbsp;&nbsp;请先选择预约的网点和日期！");
	}
	$("#xs_wddz").click(function(event) {
		window.open("http://map.baidu.com/");
	});
		

//表单提交时执行
thisTab.form_validate = function () {
	// 校验是否选择网店
	if (!ydl.validator( 'yywd', {required: true})) return false;
	// 校验是否选择日期
	if ($('#yyrq').val() == '') {
		ydl.alert("请选择您要预约的日期。");
		return false;
	}
	// 校验是否选择时间段
	if ($('#sjdbh').val() == '') {
		ydl.alert("请选择您要预约的时间段。");
		return false;
	}
	$('#sjd').val(ydl.getCheckedRadio("sjdbh").text.substring(0,11));
	return true;
}

]]></script>
  </scripts>
  <dataset/>
  <ajax/>
  <containers>
    <container type="table" id="ct_form" cols="4" uid="ct_form" caption="预约信息">
      <component type="label">预约的业务：</component>
      <component id="ywxsmc" type="input" subtype="text" fromdic="false" readonly="true" required="true">=ywxsmc</component>
      <component type="label" colspan="2"/>
      <component type="label" for="yywd">预约的网点：</component>
      <component id="yywd" type="multivalue" subtype="combo" required="true" fromdic="false" combobutton="true" combofuzzy="true" combomark="false" combodirty="false">
        <sql datasource="os_mdic"/>
        <item label="请选择..."/>
        <item label="=paraval" value="=paraname"/>
      </component>
      <component type="button" subtype="button" id="xs_wddz" fromdic="false" colspan="2">查看网点地址</component>
      <component type="label" for="yyrq">预约的日期：</component>
      <component id="yyrq" type="input" subtype="text" fromdic="false" required="true"></component>
      <component id="yyrq_info" type="plain" colspan="2">可选择从今日起，<b>0天之内</b>日期！</component>
      <component type="label" for="sjdbh">预约的时间段：</component>
      <component id="sjdbh" type="multivalue" subtype="radio" fromdic="false" direction="V" required="true" colspan="2">
        <sql datasource="workflow.cfg.xml"></sql>
      </component>
      <component type="label"/>
    </container>
    <container uid="container-f5c3bda3d3104b219df134d6553b0787" type="box" layout="fit" id="timeDialog">
      <component id="rqxz" type="plain"/>
    </container>
    <container uid="container-tip" type="box" layout="tips">
      <component id="info2" keep="true" type="plain"><![CDATA[
      <b>※温馨提示：</b>
        <ol>  
          <li>如果您想要咨询网点或其他信息，欢迎拨打住房公积金客服热线12329，我们竭诚为您服务。</li>
        </ol>]]></component>
    </container>
    <container uid="container-7cbec035706348f0afe24953b4f3c995" type="hidden" id="container-7cbec035706348f0afe24953b4f3c995">
      <component id="ywbh" type="hidden">=ywbh</component>
      <component id="wdbh" type="hidden"/>
      <component id="wdmc" type="hidden"/>
      <component id="sjd" type="hidden"/>
    </container>
  </containers>
</page>
